#This install ambari-server

- name: Disable SELinux
  selinux: state=disabled

- name: Disable Firewalld
  service: name=firewalld state=stopped enabled=no

- name: Install Ambari Server
  yum: pkg={{ item }} state=present
  with_items:
    - ambari-server
    - xorg-x11-xauth 
    - firefox

- name: Disabling ipv6 for SSHD
  shell: 'echo "AddressFamily inet" >> /etc/ssh/sshd_config'
  
- name: Restarting SSHD
  service: name=sshd enabled=yes state=restarted
    
- name: Copy JCE File to Ambari Server Resources
  copy: src=/vagrant/roles/ambari_server/files/jce_policy-8.zip dest=/var/lib/ambari-server/resources/
  
- name: Set Location of JCE File in Ambari.properties
  shell: 'echo "jce.name=jce_policy-8.zip" >> /etc/ambari-server/conf/ambari.properties' 

- name: Run Ambari Server Setup
  shell: ambari-server setup -sv
  
- name: Run Ambari Server Setup for PostgreSQL library
  shell: ambari-server setup --jdbc-db=postgres --jdbc-driver=/usr/lib/ambari-server/postgresql-9.3-1101-jdbc4.jar  

- name: Start Ambari Server using init.d (bug)
  shell: /etc/init.d/ambari-server restart
  
- name: Wait for Port 8080 to open
  wait_for: port=8080 delay=15
  
- name: Create Ranger DB
  shell: echo "CREATE DATABASE ranger;" | sudo -u postgres psql -U postgres
  
- name: Create Ranger DB Admin
  shell: echo "CREATE USER rangeradmin WITH PASSWORD 'password';" | sudo -u postgres psql -U postgres
  
- name: Grant Ranger DB Admin Rights to Ranger DB
  shell: echo "GRANT ALL PRIVILEGES ON DATABASE ranger TO rangeradmin;" | sudo -u postgres psql -U postgres
  
- name: Add rangeradmin to pg_hba.conf
  shell: 'echo "host all rangeradmin 0.0.0.0/0 trust" >> /var/lib/pgsql/data/pg_hba.conf'

- name: Restart PostgreSQL
  service: name=postgresql state=restarted enabled=yes
  
- name: Add testuser to support server
  shell: 'ssh root@support.example.com useradd test'
  
- name: Add rangerhdfslookup to support server
  shell: 'ssh root@support.example.com useradd rangerhdfslookup'
  
- name: Delete Existing Blueprint
  shell: 'curl -XDELETE http://ambari.example.com:8080/api/v1/blueprints/Example -u admin:admin -v -H "X-Requested-By: ambari"'  
  ignore_errors: yes

- name: Upload Blueprint to Ambari
  shell: 'curl -k -X POST -u admin:admin -H "X-Requested-By: ambari" --data "@/vagrant/roles/ambari_server/files/blueprint_kerberos.json" http://ambari.example.com:8080/api/v1/blueprints/Example -v'
  
- name: Upload Cluster to Ambari
  shell: 'curl -k -X POST -u admin:admin --data "@/vagrant/roles/ambari_server/files/ambari-hosts.json" "http://ambari.example.com:8080/api/v1/clusters/Example" -v -H "X-Requested-By: ambari"'
  